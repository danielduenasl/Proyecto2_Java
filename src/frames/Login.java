/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 *
 * @author PC
 */
public class Login extends javax.swing.JFrame {

    private static String URL = "jdbc:mariadb://";
    private static String USER = "";
    private static String PASSWORD = "";
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        
        menuLogin2.initMoving(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBG = new javax.swing.JPanel();
        jpBGLeft = new javax.swing.JPanel();
        menuLogin2 = new components.MenuLogin();
        jpBGCenter = new javax.swing.JPanel();
        jpHeaderBar = new javax.swing.JPanel();
        jpBtns = new javax.swing.JPanel();
        jpClose = new javax.swing.JPanel();
        jlClose = new javax.swing.JLabel();
        jpMax = new javax.swing.JPanel();
        jlMax = new javax.swing.JLabel();
        jpContain = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jpBtn = new javax.swing.JPanel();
        jlogin = new javax.swing.JLabel();
        jlPass = new javax.swing.JLabel();
        jlUser = new javax.swing.JLabel();
        jlBDD = new javax.swing.JLabel();
        jlServer1 = new javax.swing.JLabel();
        txtUser = new models.CustomTextField();
        txtServer = new models.CustomTextField();
        txtBDD = new models.CustomTextField();
        txtpassword = new models.CustomPassField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(740, 540));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(740, 540));
        setResizable(false);

        jpBG.setBackground(new java.awt.Color(255, 255, 255));
        jpBG.setLayout(new java.awt.BorderLayout());

        jpBGLeft.setPreferredSize(new java.awt.Dimension(208, 552));
        jpBGLeft.setLayout(new java.awt.BorderLayout());
        jpBGLeft.add(menuLogin2, java.awt.BorderLayout.CENTER);

        jpBG.add(jpBGLeft, java.awt.BorderLayout.LINE_START);

        jpBGCenter.setBackground(new java.awt.Color(255, 255, 255));
        jpBGCenter.setLayout(new java.awt.BorderLayout());

        jpHeaderBar.setBackground(new java.awt.Color(255, 255, 255));
        jpHeaderBar.setPreferredSize(new java.awt.Dimension(490, 34));
        jpHeaderBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jpHeaderBarMouseDragged(evt);
            }
        });
        jpHeaderBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jpHeaderBarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jpHeaderBarMousePressed(evt);
            }
        });
        jpHeaderBar.setLayout(new java.awt.BorderLayout());

        jpBtns.setBackground(new java.awt.Color(255, 255, 255));
        jpBtns.setPreferredSize(new java.awt.Dimension(68, 34));
        jpBtns.setLayout(new java.awt.BorderLayout());

        jpClose.setBackground(new java.awt.Color(255, 255, 255));
        jpClose.setPreferredSize(new java.awt.Dimension(34, 34));
        jpClose.setLayout(new java.awt.BorderLayout());

        jlClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jlClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlCloseMouseExited(evt);
            }
        });
        jpClose.add(jlClose, java.awt.BorderLayout.CENTER);

        jpBtns.add(jpClose, java.awt.BorderLayout.LINE_END);

        jpMax.setBackground(new java.awt.Color(255, 255, 255));
        jpMax.setLayout(new java.awt.BorderLayout());

        jlMax.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlMax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/minus.png"))); // NOI18N
        jlMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlMaxMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlMaxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlMaxMouseExited(evt);
            }
        });
        jpMax.add(jlMax, java.awt.BorderLayout.CENTER);

        jpBtns.add(jpMax, java.awt.BorderLayout.CENTER);

        jpHeaderBar.add(jpBtns, java.awt.BorderLayout.LINE_END);

        jpBGCenter.add(jpHeaderBar, java.awt.BorderLayout.PAGE_START);

        jpContain.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN");

        jpBtn.setBackground(new java.awt.Color(255, 51, 153));
        jpBtn.setLayout(new java.awt.BorderLayout());

        jlogin.setBackground(new java.awt.Color(255, 255, 255));
        jlogin.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jlogin.setForeground(new java.awt.Color(255, 255, 255));
        jlogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlogin.setText("LOGIN");
        jlogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jloginMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jloginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jloginMouseExited(evt);
            }
        });
        jlogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jloginKeyPressed(evt);
            }
        });
        jpBtn.add(jlogin, java.awt.BorderLayout.CENTER);

        jlPass.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlPass.setForeground(new java.awt.Color(0, 0, 0));
        jlPass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPass.setText("PASSWORD");

        jlUser.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlUser.setForeground(new java.awt.Color(0, 0, 0));
        jlUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlUser.setText("USER");

        jlBDD.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlBDD.setForeground(new java.awt.Color(0, 0, 0));
        jlBDD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlBDD.setText("DATA BASE");

        jlServer1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jlServer1.setForeground(new java.awt.Color(0, 0, 0));
        jlServer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlServer1.setText("SERVER");

        txtUser.setToolTipText("");
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });

        txtServer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtServerKeyPressed(evt);
            }
        });

        txtBDD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBDDKeyPressed(evt);
            }
        });

        txtpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpasswordKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpContainLayout = new javax.swing.GroupLayout(jpContain);
        jpContain.setLayout(jpContainLayout);
        jpContainLayout.setHorizontalGroup(
            jpContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpContainLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpContainLayout.createSequentialGroup()
                        .addGap(0, 167, Short.MAX_VALUE)
                        .addGroup(jpContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jlUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlBDD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBDD, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jlServer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jlPass, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(169, 169, 169))))
        );
        jpContainLayout.setVerticalGroup(
            jpContainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContainLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jlUser, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlPass, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlServer1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlBDD, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBDD, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jpBGCenter.add(jpContain, java.awt.BorderLayout.CENTER);

        jpBG.add(jpBGCenter, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpBG, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int x;
    private int y;
    private void jpHeaderBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpHeaderBarMousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jpHeaderBarMousePressed

    private void jpHeaderBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpHeaderBarMouseDragged
        this.setLocation(evt.getXOnScreen() - x, evt.getYOnScreen() - y);
    }//GEN-LAST:event_jpHeaderBarMouseDragged

    private void jloginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jloginMouseClicked
        tryConnection();
    }//GEN-LAST:event_jloginMouseClicked

    private void jloginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jloginMouseEntered
        jpBtn.setBackground(new Color (255,51,51));
    }//GEN-LAST:event_jloginMouseEntered

    private void jloginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jloginMouseExited
        jpBtn.setBackground(new Color (255,51,153));
    }//GEN-LAST:event_jloginMouseExited

    private void jlCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCloseMouseEntered
        jpClose.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_jlCloseMouseEntered

    private void jlCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCloseMouseExited
        jpClose.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jlCloseMouseExited

    private void jlCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jlCloseMouseClicked

    private void jlMaxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlMaxMouseEntered
        jpMax.setBackground(new Color(204, 204, 204));
    }//GEN-LAST:event_jlMaxMouseEntered

    private void jlMaxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlMaxMouseExited
        jpMax.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jlMaxMouseExited

    private void jlMaxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlMaxMouseClicked
        if(this.getExtendedState()!= MainMenu.HIDE_ON_CLOSE){
          this.setExtendedState(MainMenu.HIDE_ON_CLOSE);
        }
    }//GEN-LAST:event_jlMaxMouseClicked

    private void jpHeaderBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jpHeaderBarMouseClicked

    }//GEN-LAST:event_jpHeaderBarMouseClicked

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_TAB) {
            txtpassword.requestFocus();
        } 
    }//GEN-LAST:event_txtUserKeyPressed

    private void txtpasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpasswordKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_TAB) {
            txtServer.requestFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_TAB && evt.isShiftDown()) {
            txtpassword.requestFocus();
        }
    }//GEN-LAST:event_txtpasswordKeyPressed

    private void txtServerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtServerKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_TAB) {
            txtBDD.requestFocus();
        }
    }//GEN-LAST:event_txtServerKeyPressed

    private void txtBDDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBDDKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_TAB) {
            jpBtn.setBackground(new Color (255,51,51));
            jlogin.requestFocus();
        }
    }//GEN-LAST:event_txtBDDKeyPressed

    private void jloginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jloginKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER) {
            tryConnection();
        } else {
            jpBtn.setBackground(new Color (255,51,153));           
        }
    }//GEN-LAST:event_jloginKeyPressed
      
    public void tryConnection(){
        URL = URL + txtServer.getText() +  "/" + txtBDD.getText();
        USER = txtUser.getText();
        PASSWORD = String.valueOf(txtpassword.getPassword());
         try {
            Connection conn = this.getConnection();
            System.out.println("Conexion exitosa a MariaDB");
            MainMenu MM = new MainMenu();
            MM.show();
            this.setVisible(false);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jlBDD;
    private javax.swing.JLabel jlClose;
    private javax.swing.JLabel jlMax;
    private javax.swing.JLabel jlPass;
    private javax.swing.JLabel jlServer1;
    private javax.swing.JLabel jlUser;
    private javax.swing.JLabel jlogin;
    private javax.swing.JPanel jpBG;
    private javax.swing.JPanel jpBGCenter;
    private javax.swing.JPanel jpBGLeft;
    private javax.swing.JPanel jpBtn;
    private javax.swing.JPanel jpBtns;
    private javax.swing.JPanel jpClose;
    private javax.swing.JPanel jpContain;
    private javax.swing.JPanel jpHeaderBar;
    private javax.swing.JPanel jpMax;
    private components.MenuLogin menuLogin2;
    private models.CustomTextField txtBDD;
    private models.CustomTextField txtServer;
    private models.CustomTextField txtUser;
    private models.CustomPassField txtpassword;
    // End of variables declaration//GEN-END:variables
}
